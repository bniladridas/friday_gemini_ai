#!/bin/bash

# Setup script for HarperBot Workflow Mode
# Copies required files to the current repository
# WARNING: This script downloads and executes code from the internet.
# Review the source at https://github.com/bniladridas/friday_gemini_ai before running.

set -e

# Check for required tools
if ! command -v git >/dev/null 2>&1; then
    echo "Error: git is required but not installed."
    exit 1
fi

if ! command -v curl >/dev/null 2>&1; then
    echo "Error: curl is required but not installed."
    exit 1
fi

# Check for rsync (preferred for copying)
USE_RSYNC=false
if command -v rsync >/dev/null 2>&1; then
    USE_RSYNC=true
fi

# Parse arguments
UPDATE_MODE=false
if [ "$1" = "--update" ]; then
    UPDATE_MODE=true
    echo "Update mode selected. This will overwrite existing files."
    read -p "Are you sure you want to continue? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Setup cancelled."
        exit 0
    fi
fi

echo "Setting up HarperBot for Workflow Mode..."
if $UPDATE_MODE; then
    echo "Running in update mode: existing files will be overwritten."
fi
echo ""

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "Error: Not in a git repository. Run this script in the root of your repository."
    exit 1
fi

# Check write permissions
if ! touch .test_write_permission 2>/dev/null; then
    echo "Error: No write permission in the current directory."
    exit 1
fi
rm .test_write_permission

# Check for existing files
if [ -d "harperbot" ] && ! $UPDATE_MODE; then
    echo "Error: 'harperbot' directory already exists."
    echo "Run with --update to overwrite existing installation, or remove it manually."
    exit 1
fi

if [ -f ".github/workflows/codebot.yml" ] && ! $UPDATE_MODE; then
    echo "Error: '.github/workflows/codebot.yml' already exists."
    echo "Run with --update to overwrite existing installation, or remove it manually."
    exit 1
fi

# Get the source repository URL
SOURCE_REPO="https://github.com/bniladridas/friday_gemini_ai.git"

# Create temporary directory for cloning
TEMP_DIR=$(mktemp -d)
trap "rm -rf $TEMP_DIR" EXIT

echo "Cloning source repository..."
if ! git clone --depth 1 --progress $SOURCE_REPO $TEMP_DIR; then
    echo "Error: Failed to clone source repository"
    exit 1
fi

echo "Copying harperbot directory..."
if $USE_RSYNC; then
    if ! rsync -a $TEMP_DIR/harperbot/ ./harperbot/; then
        echo "Error: Failed to copy harperbot directory with rsync"
        exit 1
    fi
else
    if ! cp -r $TEMP_DIR/harperbot .; then
        echo "Error: Failed to copy harperbot directory"
        exit 1
    fi
fi

echo "Copying GitHub Actions workflow..."
if ! mkdir -p .github/workflows; then
    echo "Error: Failed to create .github/workflows directory"
    exit 1
fi

if $USE_RSYNC; then
    if ! rsync -a $TEMP_DIR/.github/workflows/codebot.yml .github/workflows/; then
        echo "Error: Failed to copy workflow file with rsync"
        exit 1
    fi
else
    if ! cp $TEMP_DIR/.github/workflows/codebot.yml .github/workflows/; then
        echo "Error: Failed to copy workflow file"
        exit 1
    fi
fi

echo "Verifying file integrity..."
if ! cp $TEMP_DIR/setup-checksums.sha256 .; then
    echo "Warning: Could not copy checksum file"
else
    if ! sha256sum -c setup-checksums.sha256; then
        echo "Error: File integrity check failed. Downloaded files may be corrupted."
        exit 1
    fi
    rm setup-checksums.sha256
    echo "Integrity check passed."
fi

echo "Setup complete!"
echo ""
echo "Next steps:"
echo "1. Install Python dependencies: pip install PyGithub python-dotenv PyYAML google-generativeai"
echo "2. Set repository secrets: GEMINI_API_KEY, HARPER_BOT_APP_ID, HARPER_BOT_PRIVATE_KEY"
echo "3. Optional: Configure harperbot/config.yaml"
echo "4. Push changes and test with a PR"
echo ""
echo "For detailed instructions, see harperbot/HarperBot.md"
echo ""
echo "NOTE: Workflow Mode is legacy. Consider Webhook Mode for better scalability."