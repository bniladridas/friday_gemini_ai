name: Ruby Gem

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build + Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby 3.1.0
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'
          # Don't use bundler-cache as we need to modify bundler settings
          bundler-cache: false

      - name: Configure Bundler
        run: |
          gem install bundler -v 2.3.26
          bundle config set --local frozen false
          bundle config set --local path vendor/bundle

      - name: Install Dependencies
        run: bundle install --jobs 4 --retry 3 --trace

      - name: Run Tests
        run: bundle exec rake test

      - name: Publish to GPR
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:github: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem_version=$(gem specification friday_gemini_ai | grep version | awk '{print $2}')
          if gem yank friday_gemini_ai -v $gem_version --host https://rubygems.pkg.github.com/${OWNER} 2>&1 | grep -q "This version has already been pushed."; then
            echo "Version $gem_version already exists. Skipping push."
          else
            gem push --key github --host https://rubygems.pkg.github.com/${OWNER} *.gem
          fi
        env:
          GEM_HOST_API_KEY: "${{secrets.GITHUB_TOKEN}}"
          OWNER: ${{ github.repository_owner }}

      - name: Publish to RubyGems
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:
          RUBYGEMS_API_KEY: "${{secrets.RUBYGEMS_API_KEY}}"
