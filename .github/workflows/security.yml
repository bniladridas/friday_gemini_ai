name: Security Scan

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for git diff in Gitleaks

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      # Dependency Security
      - name: Update vulnerability database
        run: bundle exec bundler-audit update

      - name: Run Bundler Audit
        id: bundler-audit
        run: |
          bundle exec bundler-audit check --update || echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
          bundle exec bundler-audit check --format json --output bundler-audit.json
        continue-on-error: true

      # Static Code Analysis
      - name: Run Brakeman
        run: |
          bundle exec brakeman --format json --output brakeman.json --no-pager
          bundle exec brakeman --format html --output brakeman.html --no-pager
        continue-on-error: true

      # Secret Scanning
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v3
        with:
          config-path: .github/gitleaks.toml
          report-format: sarif
          report-path: gitleaks.sarif
          strict: false
        continue-on-error: true

      # Dependency Scanning
      - name: Run Dependabot Security Check
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high

      # Upload Reports
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports-${{ github.sha }}
          path: |
            bundler-audit.json
            brakeman.*
            gitleaks.sarif
          retention-days: 90

      # Upload SARIF reports to GitHub Security tab
      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif
          category: gitleaks

      # Fail the job if critical vulnerabilities found
      - name: Check for critical vulnerabilities
        if: steps.bundler-audit.outputs.vulnerabilities_found == 'true'
        run: |
          echo "Critical vulnerabilities found! Check the Bundler Audit report."
          exit 1

      - name: Check for vulnerabilities
        run: |
          echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "bundler-audit.json" ]; then
            VULN_COUNT=$(jq '.vulnerabilities | length' bundler-audit.json 2>/dev/null || echo "0")
            echo "### Bundler Audit: $VULN_COUNT vulnerabilities found" >> $GITHUB_STEP_SUMMARY
            
            if [ "$VULN_COUNT" -gt "0" ]; then
              echo "[ERROR] Vulnerabilities detected in dependencies" >> $GITHUB_STEP_SUMMARY
              exit 1
            else
              echo "[SUCCESS] No vulnerabilities found in dependencies" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          if [ -f "brakeman.json" ]; then
            WARN_COUNT=$(jq '.warnings | length' brakeman.json 2>/dev/null || echo "0")
            echo "### Brakeman: $WARN_COUNT security warnings found" >> $GITHUB_STEP_SUMMARY
            
            if [ "$WARN_COUNT" -gt "0" ]; then
              echo "[WARNING] Security warnings detected in code" >> $GITHUB_STEP_SUMMARY
            else
              echo "[SUCCESS] No security warnings found in code" >> $GITHUB_STEP_SUMMARY
            fi
          fi